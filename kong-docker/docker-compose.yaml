version: '3.7'

networks:
  kong-net:
    external: true
    driver: bridge

services:

  kong-db:
    image: postgres:9.6
    container_name: kong-db
    restart: on-failure
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_PASSWORD=kong
      - POSTGRES_DB=kong
    ports:
      - 5432:5432
    networks:
      - kong-net

  # Prepare a Kong node for running Kong. This will create the database tables
  kong-prepare-migrations:
    image: kong:alpine
    container_name: kong-prepare-migrations
    command: kong migrations bootstrap
    restart: on-failure
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-db
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
    depends_on:
      - kong-db
    networks:
      - kong-net

  # Run migrations
  kong-migrations-up:
    image: kong:alpine
    container_name: kong-migrations-up
    command: kong migrations up && kong migrations finish
    restart: on-failure
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-db
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
    depends_on:
      - kong-db
    networks:
      - kong-net

  # Kong
  kong:
    image: kong:alpine
    container_name: kong
    restart: always
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-db
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - 8000:8000
      - 8001:8001
      - 8443:8443
      - 8444:8444
    networks:
      - kong-net
    depends_on:
      - kong-db